{"version":3,"sources":["resources/monthsOfTheYear.js","helpers/dateHelper.js","components/Header.js","components/ChurchTimeline.js","components/DayButton.js","resources/daysOfTheWeek.js","resources/theotokia.js","components/ButtonContainer.js","components/VerseTypeButton.js","static/theotokos_kiro_1.jpg","components/MainVerse.js","static/annunciation_kiro_1.jpg","static/platytera_kiro_1.jpg","components/TheotokiaRefPicker.js","resources/catenaBookNames.js","components/BibleRefPicker.js","components/TheotokiaGame.js","resources/verses.js","components/BibleVerseGame.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["monthNumber","monthsOfTheYear","0","1","2","3","4","5","6","7","8","9","10","11","CHRISTMAS_MONTH","START_OF_ADVENT_MONTH","getChistmasDate","today","Date","todayYear","getFullYear","todayMonth","getMonth","todayDay","getDate","getStartOfAdventDate","getDaysTillUpcomingChristmas","diffTime","Math","abs","ceil","Header","makeStyles","theme","root","flexGrow","AppBar","position","Toolbar","Typography","variant","color","ChurchTimeline","adventEvents","name","startDate","endDate","churchYearEvents","eventsToUse","date","isInCurAdvent","Timeline","align","map","event","i","TimelineItem","TimelineSeparator","TimelineDot","length","TimelineConnector","TimelineContent","DayButton","month","day","disabled","onClick","primary","Button","style","margin","substring","dayNumber","daysOfTheWeek","theotokia","theotokiaVerse","theotokiaDay","theotokiaPart","verseBody","verseBook","verseChapter","verseNumber","partsPerTheotokia","ButtonCotainer","curDay","curMonth","setCurDay","setCurMonth","christmasMonth","startOfAdventMonth","startOfAdventYear","info","VerseTypeButton","isTheotokia","setIsTheotokia","component","Grid","container","alignItems","spacing","justify","item","Switch","checked","onChange","e","target","useStyles","maxWidth","marginTop","media","height","MainVerse","text","classes","Card","className","CardActionArea","CardMedia","image","theotokos","CardContent","CardActions","size","preventDefault","window","open","TheotokiaRefPicker","correctDay","correctPart","useState","chosenDay","setChosenDay","chosenPart","setChosenPart","requestedHint","setRequestedHint","dayOptions","dayOfWeek","push","value","label","partsOptions","Array","from","_","n","isCorrectAnswer","width","placeholder","options","slice","isDisabled","defaultValue","catenaBookNames","gn","ex","lv","nm","dt","jo","jgs","ru","ezr","neh","tb","jdt","est","ps","jb","prv","eccl","sg","ws","sir","hos","am","mi","jl","ob","jon","na","hb","zep","hg","zec","mal","is","jer","bar","lam","ez","dn","mt","mk","lk","jn","acts","rom","gal","eph","phil","col","ti","phlm","heb","jas","jude","rv","chaptersPerBook","BibleRefPicker","correctBook","correctChapter","correctNumber","chosenBook","setChosenBook","setChosenChapter","setChosenNumber","bookHintGiven","setBookHintGiven","chapterHintGiven","bookOptions","book","chapterOptions","numberOptions","TheotokiaGame","showBiblicalVerse","setShowBiblicalVerse","verses","body","chapter","number","commentary","author","VerseGame","Footer","App","ButtonContainer","BibleVerseGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcd4f7d7.chunk.js","sourcesContent":["/**\r\n * This dictionary holds the months of the year as indexed by JS Date.\r\n */\r\n\r\nconst monthsOfTheYear = {\r\n\t0: \"January\",\r\n\t1: \"February\",\r\n\t2: \"March\",\r\n\t3: \"April\",\r\n\t4: \"May\",\r\n\t5: \"June\",\r\n\t6: \"July\",\r\n\t7: \"August\",\r\n\t8: \"September\",\r\n\t9: \"October\",\r\n\t10: \"November\",\r\n\t11: \"December\",\r\n};\r\n\r\nexport const monthNumber = {\r\n\tJanuary: 0,\r\n\tFebruary: 1,\r\n\tMarch: 2,\r\n\tApril: 3,\r\n\tMay: 4,\r\n\tJune: 5,\r\n\tJuly: 6,\r\n\tAugust: 7,\r\n\tSeptember: 8,\r\n\tOctober: 9,\r\n\tNovember: 10,\r\n\tDecember: 11,\r\n};\r\n\r\nexport default monthsOfTheYear;\r\n","/**\r\n * This file contains functions that help with the calculations of the advent and\r\n * christmas dates.\r\n */\r\n\r\nimport { monthNumber } from \"../resources/monthsOfTheYear\";\r\n\r\nconst CHRISTMAS_MONTH = monthNumber.January;\r\nconst CHRISTMAS_DAY = 7;\r\n\r\nconst START_OF_ADVENT_MONTH = monthNumber.November;\r\nconst START_OF_ADVENT_DAY = 25;\r\n\r\nexport const getChistmasDate = () => {\r\n\tconst today = new Date();\r\n\tconst todayYear = today.getFullYear(); // returns number --> yyyy\r\n\tconst todayMonth = today.getMonth(); // returns number from 0 to 11\r\n\tconst todayDay = today.getDate(); // returns number from 1 to 31\r\n\r\n\t// calculate the upcoming year for Christmas\r\n\t// if we are between jan 1 and jan 7, it's this year,\r\n\t// else, it is next year\r\n\tconst christmasYear =\r\n\t\ttodayMonth == CHRISTMAS_MONTH && todayDay <= CHRISTMAS_DAY\r\n\t\t\t? todayYear\r\n\t\t\t: todayYear + 1;\r\n\r\n\tconst christmasDate = new Date(christmasYear, CHRISTMAS_MONTH, CHRISTMAS_DAY);\r\n\r\n\treturn christmasDate;\r\n};\r\n\r\nexport const getStartOfAdventDate = () => {\r\n\tconst today = new Date();\r\n\tconst todayYear = today.getFullYear(); // returns number --> yyyy\r\n\tconst todayMonth = today.getMonth(); // returns number from 0 to 11\r\n\tconst todayDay = today.getDate(); // returns number from 1 to 31\r\n\r\n\t// calculate the previous start of advent day\r\n\t// if today is from jan 1 to 7, start of advent is in the previous year\r\n\t// else, start of advent is in the current year\r\n\tconst startOfAdventYear =\r\n\t\ttodayMonth == CHRISTMAS_MONTH && todayDay <= CHRISTMAS_DAY\r\n\t\t\t? todayYear - 1\r\n\t\t\t: todayYear;\r\n\r\n\tconst startOfAdventDate = new Date(\r\n\t\tstartOfAdventYear,\r\n\t\tSTART_OF_ADVENT_MONTH,\r\n\t\tSTART_OF_ADVENT_DAY\r\n\t);\r\n\r\n\treturn startOfAdventDate;\r\n};\r\n\r\nexport const isInCurAdvent = (date = new Date()) => {\r\n\treturn date >= getStartOfAdventDate() && date <= getChistmasDate();\r\n};\r\n\r\nexport const getDaysTillUpcomingChristmas = () => {\r\n\tconst today = new Date();\r\n\r\n\t// get number of days till christmas\r\n\tconst diffTime = Math.abs(getChistmasDate() - today);\r\n\tconst daysTillChristmas = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n\treturn daysTillChristmas;\r\n};\r\n","/**\r\n * This compoenent stay at the top of the page, it displays the day count till Christmas and\r\n * a verse about the Nativity.\r\n */\r\n\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { getDaysTillUpcomingChristmas } from \"../helpers/dateHelper\";\r\n\r\nconst Header = () => {\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\tflexGrow: 1,\r\n\t\t},\r\n\t}));\r\n\r\n\treturn (\r\n\t\t<AppBar position=\"static\">\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t\t\t{getDaysTillUpcomingChristmas()} days till Christmas\r\n\t\t\t\t</Typography>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>{getDaysTillUpcomingChristmas()} days till Christmas</p>\r\n\t\t\t<p>\"Christ is Born, Glorify Him\"</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","/**\r\n * This component displays a horizontal timeline that goes in the header.\r\n * If we are in the advent, it dsiplays which week of the advent we are in.\r\n * If we are outside of the advent, it displays which part of the Church year we are in.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\n\r\nimport { isInCurAdvent, getChistmasDate } from \"../helpers/dateHelper\";\r\nimport { monthNumber } from \"../resources/monthsOfTheYear\";\r\n\r\nconst ChurchTimeline = () => {\r\n\tconst today = new Date();\r\n\tconst curYear = today.getFullYear();\r\n\r\n\t// TODO change the 2020 and 2021 to be dynamic\r\n\r\n\tconst adventEvents = [\r\n\t\t{\r\n\t\t\tname: \"2 weeks of Hathor\",\r\n\t\t\tstartDate: new Date(2020, monthNumber.November, 25),\r\n\t\t\tendDate: new Date(2020, monthNumber.December, 9),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Annunciation of the Birth of John the Baptist\",\r\n\t\t\tstartDate: new Date(2020, monthNumber.December, 13),\r\n\t\t\tendDate: new Date(2020, monthNumber.December, 19),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Annunciation of the Birth of Christ\",\r\n\t\t\tstartDate: new Date(2020, monthNumber.December, 20),\r\n\t\t\tendDate: new Date(2020, monthNumber.December, 26),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"St Mary Visits Elizabeth\",\r\n\t\t\tstartDate: new Date(2020, monthNumber.December, 27),\r\n\t\t\tendDate: new Date(2021, monthNumber.January, 2),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Birth of John the Baptist\",\r\n\t\t\tstartDate: new Date(2021, monthNumber.January, 3),\r\n\t\t\tendDate: new Date(2021, monthNumber.January, 5),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Paramon\",\r\n\t\t\tstartDate: new Date(2021, monthNumber.January, 6),\r\n\t\t\tendDate: new Date(2021, monthNumber.January, 6),\r\n\t\t\t// startDate: getChistmasDate().setDate(getChistmasDate().getDate() - 5),\r\n\t\t\t// endDate: getChistmasDate().setDate(getChistmasDate().getDate() - 5),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Christmas\",\r\n\t\t\tstartDate: getChistmasDate(),\r\n\t\t\tendDate: getChistmasDate(),\r\n\t\t},\r\n\t];\r\n\tconst churchYearEvents = [\r\n\t\t{\r\n\t\t\tname: \"New Year\",\r\n\t\t\tstartDate: new Date(2020, monthNumber.September, 1),\r\n\t\t\tendDate: new Date(2020, monthNumber.November, 24),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Nativity\",\r\n\t\t\tstartDate: new Date(2020, monthNumber.November, 25),\r\n\t\t\tendDate: new Date(2021, monthNumber.January, 7),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Epiphany\",\r\n\t\t\tstartDate: new Date(2021, monthNumber.January, 8),\r\n\t\t\tendDate: new Date(2021, monthNumber.February, 25),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Lent\",\r\n\t\t\tstartDate: new Date(2021, monthNumber.February, 26),\r\n\t\t\tendDate: new Date(2021, monthNumber.April, 10),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Passion\",\r\n\t\t\tstartDate: new Date(2021, monthNumber.April, 11),\r\n\t\t\tendDate: new Date(2021, monthNumber.April, 18),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Resurrection\",\r\n\t\t\tstartDate: new Date(2021, monthNumber.April, 19),\r\n\t\t\tendDate: new Date(2021, monthNumber.May, 27),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Ascension/Pentecost\",\r\n\t\t\tstartDate: new Date(2021, monthNumber.May, 28),\r\n\t\t\tendDate: new Date(2021, monthNumber.July, 12),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Work of the Holy Spirit\",\r\n\t\t\tstartDate: new Date(2021, monthNumber.July, 13),\r\n\t\t\tendDate: new Date(2021, monthNumber.August, 31),\r\n\t\t},\r\n\t];\r\n\r\n\tconst eventsToUse = isInCurAdvent() ? adventEvents : churchYearEvents;\r\n\r\n\treturn (\r\n\t\t<Timeline align=\"alternate\">\r\n\t\t\t{eventsToUse.map((event, i) => (\r\n\t\t\t\t<TimelineItem>\r\n\t\t\t\t\t<TimelineSeparator>\r\n\t\t\t\t\t\t<TimelineDot\r\n\t\t\t\t\t\t\tcolor={\r\n\t\t\t\t\t\t\t\ttoday > event.startDate && today < event.endDate\r\n\t\t\t\t\t\t\t\t\t? \"primary\"\r\n\t\t\t\t\t\t\t\t\t: \"grey\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{i < eventsToUse.length - 1 && <TimelineConnector />}\r\n\t\t\t\t\t</TimelineSeparator>\r\n\t\t\t\t\t<TimelineContent>{event.name}</TimelineContent>\r\n\t\t\t\t</TimelineItem>\r\n\t\t\t))}\r\n\t\t</Timeline>\r\n\t);\r\n};\r\n\r\nexport default ChurchTimeline;\r\n","/**\r\n * This button displays a day of the 43 days. It the day has already passed, the button is enabled\r\n * and the user can use it to access that day. If not, the button is grayed out.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nimport monthsOfTheYear from \"../resources/monthsOfTheYear\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst DayButton = ({ month, day, disabled, onClick, primary }) => {\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tstyle={{ margin: 5 }}\r\n\t\t\tonClick={onClick}\r\n\t\t\tvariant={primary ? \"contained\" : \"text\"}\r\n\t\t\tcolor={primary ? \"primary\" : \"default\"}\r\n\t\t\tdisabled={disabled}\r\n\t\t>\r\n\t\t\t{monthsOfTheYear[month].substring(0, 3)} {day}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default DayButton;\r\n","/**\r\n * This dictionary holds the days of the week as indexed by JS Date.\r\n */\r\n\r\nconst daysOfTheWeek = {\r\n\t0: \"Sunday\",\r\n\t1: \"Monday\",\r\n\t2: \"Tuesday\",\r\n\t3: \"Wednesday\",\r\n\t4: \"Thursday\",\r\n\t5: \"Friday\",\r\n\t6: \"Saturday\",\r\n};\r\n\r\nexport const dayNumber = {\r\n\tSunday: 0,\r\n\tMonday: 1,\r\n\tTuesday: 2,\r\n\tWednesday: 3,\r\n\tThursday: 4,\r\n\tFriday: 5,\r\n\tSaturday: 6,\r\n};\r\n\r\nexport default daysOfTheWeek;\r\n","/**\r\n * This file contains the theotokia data.\r\n */\r\n\r\nimport { monthNumber } from \"./monthsOfTheYear\";\r\nimport { dayNumber } from \"./daysOfTheWeek\";\r\n\r\nconst theotokia = [\r\n\t{\r\n\t\tmonth: monthNumber.November,\r\n\t\tday: 25,\r\n\t\ttheotokiaVerse: \"He took what is ours\",\r\n\t\ttheotokiaDay: dayNumber.Friday,\r\n\t\ttheotokiaPart: 1,\r\n\t\tverseBody: \"verseBody\",\r\n\t\tverseBook: \"gn\",\r\n\t\tverseChapter: 1,\r\n\t\tverseNumber: 1,\r\n\t},\r\n\t{\r\n\t\tmonth: monthNumber.November,\r\n\t\tday: 26,\r\n\t\ttheotokiaVerse: \"and gave us what is His\",\r\n\t\ttheotokiaDay: dayNumber.Friday,\r\n\t\ttheotokiaPart: 1,\r\n\t\tverseBody: \"verseBody\",\r\n\t\tverseBook: \"gn\",\r\n\t\tverseChapter: 1,\r\n\t\tverseNumber: 1,\r\n\t},\r\n\t{\r\n\t\tmonth: monthNumber.January,\r\n\t\tday: 2,\r\n\t\ttheotokiaVerse: \"and exalt Him\",\r\n\t\ttheotokiaDay: dayNumber.Friday,\r\n\t\ttheotokiaPart: 1,\r\n\t\tverseBody: \"verseBody\",\r\n\t\tverseBook: \"gn\",\r\n\t\tverseChapter: 1,\r\n\t\tverseNumber: 1,\r\n\t},\r\n];\r\n\r\nexport default theotokia;\r\n\r\nexport const partsPerTheotokia = {\r\n\t0: 18, // Sunday\r\n\t1: 9, // Monday\r\n\t2: 7, // Tuesday\r\n\t3: 7, // Wednesday\r\n\t4: 9, // Thursday\r\n\t5: 7, // Friday\r\n\t6: 9, // Saturday\r\n};\r\n","/**\r\n * This container has all the buttons of the 43 days.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nimport DayButton from \"./DayButton\";\r\n\r\nimport theotokia from \"../resources/theotokia\";\r\nimport { monthNumber } from \"../resources/monthsOfTheYear\";\r\n\r\nconst ButtonCotainer = ({ curDay, curMonth, setCurDay, setCurMonth }) => {\r\n\tconst today = new Date();\r\n\tconst todayYear = today.getFullYear(); // returns number --> yyyy\r\n\tconst todayMonth = today.getMonth(); // returns number from 0 to 11\r\n\tconst todayDay = today.getDate(); // returns number from 1 to 31\r\n\r\n\tconst christmasMonth = monthNumber.January;\r\n\tconst christmasDay = 7;\r\n\r\n\tconst startOfAdventMonth = monthNumber.November;\r\n\tconst startOfAdventDay = 25;\r\n\r\n\t// calculate the upcoming year for Christmas\r\n\t// if we are between jan 1 and jan 7, it's this year,\r\n\t// else, it is next year\r\n\tconst christmasYear =\r\n\t\ttodayMonth == christmasMonth && todayDay <= christmasDay\r\n\t\t\t? todayYear\r\n\t\t\t: todayYear + 1;\r\n\r\n\tconst christmasDate = new Date(christmasYear, christmasMonth, christmasDay);\r\n\r\n\t// calculate the previous start of advent day\r\n\t// if today is from jan 1 to 7, start of advent is in the previous year\r\n\t// else, start of advent is in the current year\r\n\tconst startOfAdventYear =\r\n\t\ttodayMonth == christmasMonth && todayDay <= christmasDay\r\n\t\t\t? todayYear - 1\r\n\t\t\t: todayYear;\r\n\r\n\tconst startOfAdventDate = new Date(\r\n\t\tstartOfAdventYear,\r\n\t\tstartOfAdventMonth,\r\n\t\tstartOfAdventDay\r\n\t);\r\n\r\n\tconst setCurDate = (month, day) => {\r\n\t\tsetCurMonth(month);\r\n\t\tsetCurDay(day);\r\n\t};\r\n\r\n\t// only allow buttons between the last Nov 25 and the upcoming christmas\r\n\t// TODO make sure this logic works\r\n\tconst isDisabled = (month, day) => {\r\n\t\treturn false;\r\n\t\tconst isInCurAdvent = today >= startOfAdventDate && today <= christmasDate;\r\n\r\n\t\tif (!isInCurAdvent) return true; // disable all buttons if we are not in advent\r\n\r\n\t\tlet proposedDateYear = null;\r\n\t\t//\r\n\t\tif (todayYear == startOfAdventYear) {\r\n\t\t\tif (month == christmasMonth) {\r\n\t\t\t\tproposedDateYear = todayYear + 1;\r\n\t\t\t} else {\r\n\t\t\t\tproposedDateYear = todayYear;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (month == christmasMonth) {\r\n\t\t\t\tproposedDateYear = todayYear;\r\n\t\t\t} else {\r\n\t\t\t\tproposedDateYear = todayYear - 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst proposedDate = new Date(proposedDateYear, month, day);\r\n\r\n\t\tconst proposedDateDidNotComeYet = proposedDate > today;\r\n\r\n\t\treturn proposedDateDidNotComeYet;\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{theotokia.map((info) => (\r\n\t\t\t\t<DayButton\r\n\t\t\t\t\tkey={`btn-${info.month}-${info.day}`}\r\n\t\t\t\t\tmonth={info.month}\r\n\t\t\t\t\tday={info.day}\r\n\t\t\t\t\tonClick={() => setCurDate(info.month, info.day)}\r\n\t\t\t\t\tdisabled={isDisabled(info.month, info.day)}\r\n\t\t\t\t\tprimary={info.month == curMonth && info.day == curDay}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ButtonCotainer;\r\n","/**\r\n * This simple button switches between the Theotkia mode and the Bible verse mode.\r\n */\r\n\r\nimport React from \"react\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst VerseTypeButton = ({ isTheotokia, setIsTheotokia }) => {\r\n\treturn (\r\n\t\t<Typography component=\"div\">\r\n\t\t\t<Grid\r\n\t\t\t\tcomponent=\"label\"\r\n\t\t\t\tcontainer\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tspacing={1}\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t>\r\n\t\t\t\t<Grid item>Explore Scripture</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Switch\r\n\t\t\t\t\t\tchecked={isTheotokia}\r\n\t\t\t\t\t\tonChange={(e) => setIsTheotokia(e.target.checked)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item>Explore the Thetokia</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Typography>\r\n\r\n\t\t// <Switch\r\n\t\t// \tchecked={isTheotokia}\r\n\t\t// \tonChange={(e) => setIsTheotokia(e.target.checked)}\r\n\t\t// \tlabel=\"Explore the Thetokia\"\r\n\t\t// />\r\n\t);\r\n\r\n\treturn (\r\n\t\t<button onClick={() => setIsTheotokia(!isTheotokia)}>\r\n\t\t\tChange to {isTheotokia ? \"Bible Prophecies and Praises\" : \"Theotokia\"}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default VerseTypeButton;\r\n","export default __webpack_public_path__ + \"static/media/theotokos_kiro_1.eb73755d.jpg\";","/**\r\n * This component displays the text of the main verse.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport theotokos from \"../static/theotokos_kiro_1.jpg\";\r\nimport annunciation from \"../static/annunciation_kiro_1.jpg\";\r\nimport platytera from \"../static/platytera_kiro_1.jpg\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tmaxWidth: \"40%\",\r\n\r\n\t\tmargin: \"auto\",\r\n\t\tmarginTop: 20,\r\n\t},\r\n\tmedia: {\r\n\t\theight: 600,\r\n\t},\r\n});\r\n\r\nconst MainVerse = ({ text, isTheotokia }) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardActionArea>\r\n\t\t\t\t<CardMedia className={classes.media} image={theotokos} />\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t\t{text}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</CardActionArea>\r\n\t\t\t<CardActions>\r\n\t\t\t\t{isTheotokia ? (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\twindow.open(\"https://tasbeha.org/hymn_library/cat/214\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tOpen Psalmody\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\twindow.open(\r\n\t\t\t\t\t\t\t\t\"https://www.biblegateway.com/versions/New-King-James-Version-NKJV-Bible/#booklist\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tOpen Scripture\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>{text}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MainVerse;\r\n","export default __webpack_public_path__ + \"static/media/annunciation_kiro_1.ae4d4674.jpg\";","export default __webpack_public_path__ + \"static/media/platytera_kiro_1.14066bdf.jpg\";","/**\r\n * This component lets the user choose a day of the week and a part number for the theotokia.\r\n * The part number should change dynamically with the day of the week.\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\n\r\n// partsPerTheotokia[dayOFWeek {0-6}] = numberOfPartsInThisTheotokia\r\nimport { partsPerTheotokia } from \"../resources/theotokia\";\r\nimport daysOfTheWeek from \"../resources/daysOfTheWeek\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nconst TheotokiaRefPicker = ({ correctDay, correctPart }) => {\r\n\tconst [chosenDay, setChosenDay] = useState(null); // start with the user not choosing any day\r\n\tconst [chosenPart, setChosenPart] = useState(0); // start with the user not choosing any part\r\n\r\n\tconst [requestedHint, setRequestedHint] = useState(false); // start with the user not needing a hint\r\n\r\n\tlet dayOptions = [];\r\n\tfor (const dayOfWeek in daysOfTheWeek) {\r\n\t\tdayOptions.push({ value: dayOfWeek, label: daysOfTheWeek[dayOfWeek] });\r\n\t}\r\n\r\n\tconst partsOptions = Array.from({ length: 18 }, (_, i) => i + 1).map((n) => ({\r\n\t\tvalue: n,\r\n\t\tlabel: n,\r\n\t}));\r\n\r\n\tconst isCorrectAnswer = chosenDay == correctDay && chosenPart == correctPart;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Can you find this verse in the Psalmody?</p>\r\n\r\n\t\t\t<div style={{ width: \"40%\" }}>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tplaceholder=\"Pick a Day\"\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetChosenDay(e.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\toptions={\r\n\t\t\t\t\t\trequestedHint\r\n\t\t\t\t\t\t\t? dayOptions.slice(correctDay, correctDay + 1)\r\n\t\t\t\t\t\t\t: dayOptions\r\n\t\t\t\t\t}\r\n\t\t\t\t\tisDisabled={isCorrectAnswer}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ width: \"40%\" }}>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tplaceholder=\"Pick a Part\"\r\n\t\t\t\t\tdefaultValue={chosenPart}\r\n\t\t\t\t\tonChange={(e) => setChosenPart(e.value)}\r\n\t\t\t\t\toptions={\r\n\t\t\t\t\t\tchosenDay\r\n\t\t\t\t\t\t\t? partsOptions.slice(0, partsPerTheotokia[chosenDay])\r\n\t\t\t\t\t\t\t: partsOptions\r\n\t\t\t\t\t}\r\n\t\t\t\t\tisDisabled={isCorrectAnswer}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{!isCorrectAnswer && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tdisabled={requestedHint}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetRequestedHint(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{requestedHint\r\n\t\t\t\t\t\t? `It's ${daysOfTheWeek[correctDay]}`\r\n\t\t\t\t\t\t: \"I need a hint!\"}\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TheotokiaRefPicker;\r\n","/**\r\n * This file has a dictionary (object) that links the abbriviation that Catena\r\n * assigns to every book of the Bible to the full name of the book.\r\n * The abbriviation is the key and the full name is the value.\r\n */\r\n\r\nconst catenaBookNames = {\r\n\t////////////////////////////////////////////////////////\r\n\t//                  Old Testament\r\n\t////////////////////////////////////////////////////////\r\n\tgn: \"Genesis\",\r\n\tex: \"Exodus\",\r\n\tlv: \"Leviticus\",\r\n\tnm: \"Numbers\",\r\n\tdt: \"Deuteronomy\",\r\n\tjo: \"Joshua\",\r\n\tjgs: \"Judges\",\r\n\tru: \"Ruth\",\r\n\t\"1sm\": \"1 Samuel\",\r\n\t\"2sm\": \"2 Samuel\",\r\n\t\"1kgs\": \"1 Kings\",\r\n\t\"2kgs\": \"2 Kings\",\r\n\t\"1chr\": \"1 Chronicles\",\r\n\t\"2chr\": \"2 Chronicles\",\r\n\tezr: \"Ezra\",\r\n\tneh: \"Nehemiah\",\r\n\ttb: \"Tobit\",\r\n\tjdt: \"Judith\",\r\n\test: \"Esther\",\r\n\t\"1mc\": \"Maccabees 1\",\r\n\t\"2mc\": \"Maccabees 2\",\r\n\tps: \"Psalms\",\r\n\tjb: \"Job\",\r\n\tprv: \"Proverbs\",\r\n\teccl: \"Ecclesiastes\",\r\n\tsg: \"Song of Songs\",\r\n\tws: \"Wisdom of Solomon\",\r\n\tsir: \"Wisdom of Sirach\",\r\n\thos: \"Hosea\",\r\n\tam: \"Amos\",\r\n\tmi: \"Micah\",\r\n\tjl: \"Joel\",\r\n\tob: \"Obadiah\",\r\n\tjon: \"Jonah\",\r\n\tna: \"Nahum\",\r\n\thb: \"Habakkuk\",\r\n\tzep: \"Zephaniah\",\r\n\thg: \"Haggai\",\r\n\tzec: \"Zechariah\",\r\n\tmal: \"Malachi\",\r\n\tis: \"Isaiah\",\r\n\tjer: \"Jeremiah\",\r\n\tbar: \"Baruch\",\r\n\tlam: \"Lamentations\",\r\n\tez: \"Ezekiel\",\r\n\tdn: \"Daniel\",\r\n\t////////////////////////////////////////////////////////\r\n\t//                  New Testament\r\n\t////////////////////////////////////////////////////////\r\n\r\n\tmt: \"Matthew\",\r\n\tmk: \"Mark\",\r\n\tlk: \"Luke\",\r\n\tjn: \"John\",\r\n\tacts: \"Acts\",\r\n\trom: \"Romans\",\r\n\t\"1cor\": \"1 Corinthians\",\r\n\t\"2cor\": \"2 Corinthians\",\r\n\tgal: \"Galatians\",\r\n\teph: \"Ephesians\",\r\n\tphil: \"Philippians\",\r\n\tcol: \"Colossians\",\r\n\t\"1thes\": \"1 Thessalonians\",\r\n\t\"2thes\": \"2 Thessalonians\",\r\n\t\"1tm\": \"1 Timothy\",\r\n\t\"2tm\": \"2 Timothy\",\r\n\tti: \"Titus\",\r\n\tphlm: \"Philemon\",\r\n\theb: \"Hebrews\",\r\n\tjas: \"James\",\r\n\t\"1pt\": \"1 Peter\",\r\n\t\"2pt\": \"2 Peter\",\r\n\t\"1jn\": \"1 John\",\r\n\t\"2jn\": \"2 John\",\r\n\t\"3jn\": \"3 John\",\r\n\tjude: \"Jude\",\r\n\trv: \"Revelation\",\r\n};\r\n\r\nexport default catenaBookNames;\r\n\r\n// TODO change this to have the number of chapters of each book\r\nexport const chaptersPerBook = {\r\n\t////////////////////////////////////////////////////////\r\n\t//                  Old Testament\r\n\t////////////////////////////////////////////////////////\r\n\tgn: 50,\r\n\tex: 40,\r\n\tlv: 27,\r\n\tnm: 26,\r\n\tdt: 34,\r\n\tjo: 24,\r\n\tjgs: 21,\r\n\tru: 4,\r\n\t\"1sm\": 31,\r\n\t\"2sm\": 24,\r\n\t\"1kgs\": 22,\r\n\t\"2kgs\": 25,\r\n\t\"1chr\": 29,\r\n\t\"2chr\": 36,\r\n\tezr: 10,\r\n\tneh: 13,\r\n\ttb: 14,\r\n\tjdt: 16,\r\n\test: 10,\r\n\t\"1mc\": 16,\r\n\t\"2mc\": 15,\r\n\tps: 150,\r\n\tjb: 42,\r\n\tprv: 31,\r\n\teccl: 12,\r\n\tsg: 8,\r\n\tws: 19,\r\n\tsir: 51,\r\n\thos: 14,\r\n\tam: 9,\r\n\tmi: 7,\r\n\tjl: 3,\r\n\tob: 1,\r\n\tjon: 4,\r\n\tna: 3,\r\n\thb: 3,\r\n\tzep: 3,\r\n\thg: 2,\r\n\tzec: 14,\r\n\tmal: 4,\r\n\tis: 66,\r\n\tjer: 52,\r\n\tbar: 6,\r\n\tlam: 5,\r\n\tez: 48,\r\n\tdn: 14,\r\n\t////////////////////////////////////////////////////////\r\n\t//                  New Testament\r\n\t////////////////////////////////////////////////////////\r\n\r\n\tmt: 28,\r\n\tmk: 16,\r\n\tlk: 24,\r\n\tjn: 21,\r\n\tacts: 28,\r\n\trom: 16,\r\n\t\"1cor\": 16,\r\n\t\"2cor\": 13,\r\n\tgal: 6,\r\n\teph: 6,\r\n\tphil: 4,\r\n\tcol: 4,\r\n\t\"1thes\": 5,\r\n\t\"2thes\": 3,\r\n\t\"1tm\": 6,\r\n\t\"2tm\": 4,\r\n\tti: 3,\r\n\tphlm: 1,\r\n\theb: 13,\r\n\tjas: 5,\r\n\t\"1pt\": 5,\r\n\t\"2pt\": 3,\r\n\t\"1jn\": 5,\r\n\t\"2jn\": 1,\r\n\t\"3jn\": 1,\r\n\tjude: 1,\r\n\trv: 22,\r\n};\r\n","/**\r\n * This component displays three pickers:\r\n * - book names\r\n * - chapter (should dunamically change based on book)\r\n * - number (should dynamically change based on book and chapter)\r\n *\r\n * TODO add ability to request hints --> lock book, then lock chapter, then lock verse\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport Select from \"react-select\";\r\nimport catenaBookNames, { chaptersPerBook } from \"../resources/catenaBookNames\";\r\n\r\nconst BibleRefPicker = ({ correctBook, correctChapter, correctNumber }) => {\r\n\tconst [chosenBook, setChosenBook] = useState(null); // start with the user not choosing any book in the Bible\r\n\tconst [chosenChapter, setChosenChapter] = useState(0); // start with the user not choosing any chapter in any book in the Bible\r\n\tconst [chosenNumber, setChosenNumber] = useState(0); // start with the user not choosing and nymber in any chapter in any book in the Bible\r\n\r\n\tconst [bookHintGiven, setBookHintGiven] = useState(false); // start without giving a hint about the book\r\n\tconst [chapterHintGiven, setChapterHintGiven] = useState(false); // start without giving a hint about the chapter\r\n\r\n\tlet bookOptions = [];\r\n\tfor (const book in catenaBookNames) {\r\n\t\tbookOptions.push({ value: book, label: catenaBookNames[book] });\r\n\t}\r\n\r\n\t// longest book in the Bible is Psalms with 150 chapters\r\n\tconst chapterOptions = Array.from({ length: 150 }, (_, i) => i + 1).map(\r\n\t\t(n) => ({\r\n\t\t\tvalue: n,\r\n\t\t\tlabel: n,\r\n\t\t})\r\n\t);\r\n\r\n\t// longest chapter in the Bible is Psalms 119 with 176 verses\r\n\tconst numberOptions = Array.from({ length: 176 }, (_, i) => i + 1).map(\r\n\t\t(n) => ({\r\n\t\t\tvalue: n,\r\n\t\t\tlabel: n,\r\n\t\t})\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Please pick a book\"\r\n\t\t\t\tonChange={(e) => setChosenBook(e.value)}\r\n\t\t\t\toptions={bookOptions}\r\n\t\t\t/>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Please pick a chapter\"\r\n\t\t\t\tonChange={(e) => setChosenChapter(e.value)}\r\n\t\t\t\toptions={\r\n\t\t\t\t\tchosenBook\r\n\t\t\t\t\t\t? chapterOptions.slice(0, chaptersPerBook[chosenBook])\r\n\t\t\t\t\t\t: chapterOptions\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Please pick a number\"\r\n\t\t\t\tonChange={(e) => setChosenNumber(e.value)}\r\n\t\t\t\toptions={numberOptions}\r\n\t\t\t/>\r\n\t\t\t{!bookHintGiven && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetBookHintGiven(true);\r\n\t\t\t\t\t\tsetChosenBook(correctBook);\r\n\t\t\t\t\t\t// TODO slice the bookOptions to be only the correct book\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tI need a hint!\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t{bookHintGiven && !chapterHintGiven && (\r\n\t\t\t\t<button>I need a second hint</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BibleRefPicker;\r\n","/**\r\n * This compoenent shows the user a verse from the theotokia, and asks them to find the day and the part #.\r\n * Then, it asks them to find its source in the Bible and displays the verse when done.\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport theotokia from \"../resources/theotokia\";\r\n\r\nimport MainVerse from \"./MainVerse\";\r\nimport TheotokiaRefPicker from \"./TheotokiaRefPicker\";\r\nimport BibleRefPicker from \"./BibleRefPicker\";\r\nimport SecondaryVerse from \"./SecondaryVerse\";\r\n\r\nconst TheotokiaGame = ({ day, month }) => {\r\n\tconst info = theotokia[0]; // TODO change this to find the theotokia based on day and month\r\n\r\n\tconst [showBiblicalVerse, setShowBiblicalVerse] = useState(false); // start by not showing the Biblical verse\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<MainVerse text={info.theotokiaVerse} isTheotokia />\r\n\t\t\t<TheotokiaRefPicker\r\n\t\t\t\tcorrectDay={info.theotokiaDay}\r\n\t\t\t\tcorrectPart={info.theotokiaPart}\r\n\t\t\t/>\r\n\t\t\t<p>Now, try to find this in a verse in the Bible</p>\r\n\t\t\t{showBiblicalVerse ? (\r\n\t\t\t\t<MainVerse text={info.verseBody} />\r\n\t\t\t) : (\r\n\t\t\t\t<button onClick={() => setShowBiblicalVerse(true)}>\r\n\t\t\t\t\tI am puzzled, can you please show me the verse?\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t<BibleRefPicker\r\n\t\t\t\tcorrectBook={info.verseBook}\r\n\t\t\t\tcorrectChapter={info.verseChapter}\r\n\t\t\t\tcorrectNumber={info.verseNumber}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TheotokiaGame;\r\n","const verses = [\r\n\t{\r\n\t\tmonth: 11,\r\n\t\tday: 25,\r\n\t\tbody: \"Christ is born\",\r\n\t\tbook: \"Genesis\",\r\n\t\tchapter: 1,\r\n\t\tnumber: 1,\r\n\t\tcommentary: \"Somthing deep\",\r\n\t\tauthor: \"holy father\",\r\n\t},\r\n];\r\n\r\nexport default verses;\r\n","/**\r\n * This compoenent diaplys the body if a verse and the user must find its reference.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nimport verses from \"../resources/verses\";\r\n\r\nimport MainVerse from \"./MainVerse\";\r\nimport BibleRefPicker from \"./BibleRefPicker\";\r\n\r\nconst VerseGame = ({ day, month }) => {\r\n\tconst info = verses[0]; // TODO find this based on day and month\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<MainVerse text={info.body} />\r\n\t\t\t<BibleRefPicker />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default VerseGame;\r\n","/**\r\n * This is the footer that displays at the bottom of every page.\r\n *\r\n * TODO add a verse, an icon, etc.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p> Made with love from St George and St Abanoub</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\n\nimport { isInCurAdvent } from \"./helpers/dateHelper\";\n\nimport Header from \"./components/Header\";\nimport ChurchTimeline from \"./components/ChurchTimeline\";\nimport ButtonContainer from \"./components/ButtonContainer\";\nimport VerseTypeButton from \"./components/VerseTypeButton\";\nimport TheotokiaGame from \"./components/TheotokiaGame\";\nimport BibleVerseGame from \"./components/BibleVerseGame\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n\tconst today = new Date();\n\tconst todayMonth = today.getMonth(); // returns number from 0 to 11\n\tconst todayDay = today.getDate(); // returns number from 1 to 31\n\n\tconst [curMonth, setCurMonth] = useState(todayMonth);\n\tconst [curDay, setCurDay] = useState(todayDay);\n\n\tconst [isTheotokia, setIsTheotokia] = useState(true); // start user in theotokia mode, they can switch to bible verse mode\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<ChurchTimeline />\n\n\t\t\t{/* TODO ucomment this isInCurAdvent condition to only open game during advent */}\n\t\t\t{/* {isInCurAdvent() && ( */}\n\t\t\t<div>\n\t\t\t\t<ButtonContainer\n\t\t\t\t\tcurDay={curDay}\n\t\t\t\t\tcurMonth={curMonth}\n\t\t\t\t\tsetCurDay={setCurDay}\n\t\t\t\t\tsetCurMonth={setCurMonth}\n\t\t\t\t/>\n\t\t\t\t<VerseTypeButton\n\t\t\t\t\tisTheotokia={isTheotokia}\n\t\t\t\t\tsetIsTheotokia={setIsTheotokia}\n\t\t\t\t/>\n\t\t\t\t{isTheotokia ? (\n\t\t\t\t\t<TheotokiaGame day={curDay} month={curMonth} />\n\t\t\t\t) : (\n\t\t\t\t\t<BibleVerseGame day={curDay} month={curMonth} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{/* )} */}\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}